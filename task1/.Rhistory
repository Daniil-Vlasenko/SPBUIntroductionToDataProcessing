case_when(
df$income < 2.5 & is.na(df$incomeLevel) ~ "low",
df$income >= 2.5 & df$income <= 8 & is.na(df$incomeLevel) ~ "average",
df$income >8 & is.na(df$incomeLevel) ~ "high"
)
case_when(
df$income < 2.5 ~ "low",
df$income >= 2.5 ~ "average",
df$income >8 ~ "high"
)
case_when(
df$income < 2.5 ~ "low",
df$income >= 2.5 ~ "average",
df$income >8 ~ "high"
)
df$incomeLevel <- case_when(
df$income < 2.5 ~ "low",
df$income >= 2.5 ~ "average",
df$income >8 ~ "high"
)
df
filter(df, owner == "no")
filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents))
filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents))[1,]
class(filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)))
class(filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)))[1,1]
# 2.
# Print some information about dataset.
file.create("output.txt", showWarnings = TRUE)
output <-file("output.txt")
write("Average amount of dependents for people don't own their home:", file="output.txt")
write(filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)),
file="output.txt", append=TRUE)
write.table(filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)),
file="output.txt", append=TRUE)
filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents))[1]
filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents))
dependents(filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)))
dimension(filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)))
dim(filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)))
dim(filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)))[1,1]
dim(filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)))[,]
dn <- as.data.frame(1)
dn
dn[1]
dn[1,1]
filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents))
filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents))[1, meanDependents]
filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents))[meanDependents]
filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents))[[meanDependents]]
filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents))[1]
filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents))[[1]]
filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents))
class(filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)))
filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents))&meanDependents
filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents))
dn <- filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents))
dn
dn$meanDependents
write(filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents))$meanDependents,
file="output.txt", append=TRUE)
filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents))
filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents))$meanDependents
(filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents))))$meanDependents
(filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)))$meanDependents
write((filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)))$meanDependents,
file="output.txt", append=TRUE)
# 2.
# Print some information about dataset.
file.create("output.txt", showWarnings = TRUE)
output <-file("output.txt")
write("Average amount of dependents for people don't own their home:", file="output.txt")
write((filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)))$meanDependents,
file="output.txt", append=TRUE)
dftmp <- filter(df, card == "no")
dftmp <- dftmp[order(dftmp$age),]
dftmp
dftmp <- arrange(dftmp, age)
dftmp
dftmp <- filter(df, card == "no")
dftmp
dftmp <- arrange(dftmp, age)
dftmp
library("lubridate")
library("dplyr")
# 1.
# Create a dateframe of self-employed.
df <- read.table("study_fall2021_intror_creditcard.txt", header=TRUE, sep=";")
df <- filter(df, selfemp == "yes")
# Convert amount of months applicant living at his/her current address to days.
today <- as.Date("2000-01-01")
df <- mutate(df, days = as.numeric(today - (today %m-% months(df$months))))
# Add column with income per family member.
# Due to the lack of information about a person's family,
# we assume that dependents are family members without the applicant.
df <- mutate(df, incomePerFamilyMember = income / (dependents + 1))
# Define criterion of income level, and split data according to levels of this criterion.
df$incomeLevel <- case_when(
df$income < 2.5 ~ "low",
df$income >= 2.5 ~ "average",
df$income >8 ~ "high"
)
# 2.
# Print some information about dataset.
file.create("output.txt", showWarnings = TRUE)
output <-file("output.txt")
write("Average amount of dependents for people don't own their home:", file="output.txt")
write((filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)))$meanDependents,
file="output.txt", append=TRUE)
write("Average age in each income groups:", file="output.txt", append=TRUE)
write.table(df %>% group_by(incomeLevel) %>% summarise(averageAge = mean(age)),
file = "output.txt", sep = ";", append=TRUE, row.names=FALSE, col.names=FALSE)
write("Top 5 youngest people, whose application was declined: ",
file = "output.txt", append=TRUE)
dftmp <- filter(df, card == "no")
dftmp <- arrange(dftmp, age)
write.table(dftmp[1:5,], file = "output.txt", sep = ";", append=TRUE)
write("Top 5 eldest people, whose application was declined: ", file = "output.txt", append=TRUE)
write.table(tail(dftmp, 5), file = "output.txt", sep = ";", append=TRUE)
write("Average number of major CCs held for people with top 10 income: ",
file = "output.txt", append=TRUE)
write(sort(df$income) %>% tail(10) %>% mean(),
file = "output.txt", append=TRUE)
close(output)
library("lubridate")
library("dplyr")
# 1.
# Create a dateframe of self-employed.
df <- read.table("study_fall2021_intror_creditcard.txt", header=TRUE, sep=";")
df <- filter(df, selfemp == "yes")
# Convert amount of months applicant living at his/her current address to days.
today <- as.Date("2000-01-01")
df <- mutate(df, days = as.numeric(today - (today %m-% months(df$months))))
# Add column with income per family member.
# Due to the lack of information about a person's family,
# we assume that dependents are family members without the applicant.
df <- mutate(df, incomePerFamilyMember = income / (dependents + 1))
# Define criterion of income level, and split data according to levels of this criterion.
df$incomeLevel <- case_when(
df$income < 2.5 ~ "low",
df$income >= 2.5 & df$income <= 8 ~ "average",
df$income >8 ~ "high"
)
# 2.
# Print some information about dataset.
file.create("output.txt", showWarnings = TRUE)
output <-file("output.txt")
write("Average amount of dependents for people don't own their home:", file="output.txt")
write((filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)))$meanDependents,
file="output.txt", append=TRUE)
write("Average age in each income groups:", file="output.txt", append=TRUE)
write.table(df %>% group_by(incomeLevel) %>% summarise(averageAge = mean(age)),
file = "output.txt", sep = ";", append=TRUE, row.names=FALSE, col.names=FALSE)
write("Top 5 youngest people, whose application was declined: ",
file = "output.txt", append=TRUE)
dftmp <- filter(df, card == "no")
dftmp <- arrange(dftmp, age)
write.table(dftmp[1:5,], file = "output.txt", sep = ";", append=TRUE)
write("Top 5 eldest people, whose application was declined: ", file = "output.txt", append=TRUE)
write.table(tail(dftmp, 5), file = "output.txt", sep = ";", append=TRUE)
write("Average number of major CCs held for people with top 10 income: ",
file = "output.txt", append=TRUE)
write(sort(df$income) %>% tail(10) %>% mean(),
file = "output.txt", append=TRUE)
close(output)
close(output)
library("lubridate")
library("dplyr")
# 1.
# Create a dateframe of self-employed.
df <- read.table("study_fall2021_intror_creditcard.txt", header=TRUE, sep=";")
df <- filter(df, selfemp == "yes")
# Convert amount of months applicant living at his/her current address to days.
today <- as.Date("2000-01-01")
df <- mutate(df, days = as.numeric(today - (today %m-% months(df$months))))
# Add column with income per family member.
# Due to the lack of information about a person's family,
# we assume that dependents are family members without the applicant.
df <- mutate(df, incomePerFamilyMember = income / (dependents + 1))
# Define criterion of income level, and split data according to levels of this criterion.
df$incomeLevel <- case_when(
df$income < 2.5 ~ "low",
df$income >= 2.5 & df$income <= 8 ~ "average",
df$income >8 ~ "high"
)
# 2.
# Print some information about dataset.
file.create("output.txt", showWarnings = TRUE)
output <-file("output.txt")
write("Average amount of dependents for people don't own their home:", file="output.txt")
write((filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)))$meanDependents,
file="output.txt", append=TRUE)
write("Average age in each income groups:", file="output.txt", append=TRUE)
write.table(df %>% group_by(incomeLevel) %>% summarise(averageAge = mean(age)),
file = "output.txt", sep = ";", append=TRUE, row.names=FALSE, col.names=FALSE)
write("Top 5 youngest people, whose application was declined: ",
file = "output.txt", append=TRUE)
dftmp <- filter(df, card == "no")
dftmp <- arrange(dftmp, age)
write.table(dftmp[1:5,], file = "output.txt", sep = ";", append=TRUE)
write("Top 5 eldest people, whose application was declined: ", file = "output.txt", append=TRUE)
write.table(tail(dftmp, 5), file = "output.txt", sep = ";", append=TRUE)
write("Average number of major CCs held for people with top 10 income: ",
file = "output.txt", append=TRUE)
write(sort(df$income) %>% tail(10) %>% mean(),
file = "output.txt", append=TRUE)
close(output)
(arrange(dftmp, income) %>% tail(10))$majorcards %>% mean()
library("lubridate")
library("dplyr")
# 1.
# Create a dateframe of self-employed.
df <- read.table("study_fall2021_intror_creditcard.txt", header=TRUE, sep=";")
df <- filter(df, selfemp == "yes")
# Convert amount of months applicant living at his/her current address to days.
today <- as.Date("2000-01-01")
df <- mutate(df, days = as.numeric(today - (today %m-% months(df$months))))
# Add column with income per family member.
# Due to the lack of information about a person's family,
# we assume that dependents are family members without the applicant.
df <- mutate(df, incomePerFamilyMember = income / (dependents + 1))
# Define criterion of income level, and split data according to levels of this criterion.
df$incomeLevel <- case_when(
df$income < 2.5 ~ "low",
df$income >= 2.5 & df$income <= 8 ~ "average",
df$income >8 ~ "high"
)
# 2.
# Print some information about dataset.
file.create("output.txt", showWarnings = TRUE)
output <-file("output.txt")
write("Average amount of dependents for people don't own their home:", file="output.txt")
write((filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)))$meanDependents,
file="output.txt", append=TRUE)
write("Average age in each income groups:", file="output.txt", append=TRUE)
write.table(df %>% group_by(incomeLevel) %>% summarise(averageAge = mean(age)),
file = "output.txt", sep = ";", append=TRUE, row.names=FALSE, col.names=FALSE)
write("Top 5 youngest people, whose application was declined: ",
file = "output.txt", append=TRUE)
dftmp <- filter(df, card == "no")
dftmp <- arrange(dftmp, age)
write.table(dftmp[1:5,], file = "output.txt", sep = ";", append=TRUE)
write("Top 5 eldest people, whose application was declined: ", file = "output.txt", append=TRUE)
write.table(tail(dftmp, 5), file = "output.txt", sep = ";", append=TRUE)
write("Average number of major CCs held for people with top 10 income: ",
file = "output.txt", append=TRUE)
write((arrange(dftmp, income) %>% tail(10))$majorcards %>% mean(),
file = "output.txt", append=TRUE)
close(output)
library("lubridate")
library("dplyr")
# 1.
# Create a dateframe of self-employed.
# Convert amount of months applicant living at his/her current address to days.
# Define criterion of income level, and split data according to levels of this criterion.
# Add column with income per family member.
# Due to the lack of information about a person's family,
# we assume that dependents are family members without the applicant.
today <- as.Date("2000-01-01")
df <- read.table("study_fall2021_intror_creditcard.txt", header=TRUE, sep=";") %>% filter(selfemp == "yes") %>%
mutate(days = as.numeric(today - (today %m-% months(df$months))), incomeLevel = case_when(
df$income < 2.5 ~ "low",
df$income >= 2.5 & df$income <= 8 ~ "average",
df$income >8 ~ "high"
), incomePerFamilyMember = income / (dependents + 1))
# 2.
# Print some information about dataset.
file.create("output.txt", showWarnings = TRUE)
output <-file("output.txt")
write("Average amount of dependents for people don't own their home:", file="output.txt")
write((filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)))$meanDependents,
file="output.txt", append=TRUE)
write("Average age in each income groups:", file="output.txt", append=TRUE)
write.table(df %>% group_by(incomeLevel) %>% summarise(averageAge = mean(age)),
file = "output.txt", sep = ";", append=TRUE, row.names=FALSE, col.names=FALSE)
write("Top 5 youngest people, whose application was declined: ",
file = "output.txt", append=TRUE)
dftmp <- filter(df, card == "no") %>% arrange(age)
write.table(dftmp[1:5,], file = "output.txt", sep = ";", append=TRUE)
write("Top 5 eldest people, whose application was declined: ", file = "output.txt", append=TRUE)
write.table(tail(dftmp, 5), file = "output.txt", sep = ";", append=TRUE)
write("Average number of major CCs held for people with top 10 income: ",
file = "output.txt", append=TRUE)
write((arrange(df, income) %>% tail(10))$majorcards %>% mean(),
file = "output.txt", append=TRUE)
close(output)
df
df[1:5]
df[1:5,]
(arrange(df, income) %>% tail(10))$majorcards %>% mean()
(arrange(df, income) %>% tail(10))$majorcards
(arrange(df, income) %>% tail(10))
library("lubridate")
library("dplyr")
# 1.
# Create a dateframe of self-employed.
# Convert amount of months applicant living at his/her current address to days.
# Define criterion of income level, and split data according to levels of this criterion.
# Add column with income per family member.
# Due to the lack of information about a person's family,
# we assume that dependents are family members without the applicant.
today <- as.Date("2000-01-01")
df <- read.table("study_fall2021_intror_creditcard.txt", header=TRUE, sep=";") %>% filter(selfemp == "yes") %>%
mutate(days = as.numeric(today - (today %m-% months(df$months))), incomeLevel = case_when(
df$income < 2.5 ~ "low",
df$income >= 2.5 & df$income <= 8 ~ "average",
df$income >8 ~ "high"
), incomePerFamilyMember = income / (dependents + 1))
# 2.
# Print some information about dataset.
file.create("output.txt", showWarnings = TRUE)
output <-file("output.txt")
write("Average amount of dependents for people don't own their home:", file="output.txt")
write((filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)))$meanDependents,
file="output.txt", append=TRUE)
write("Average age in each income groups:", file="output.txt", append=TRUE)
write.table(df %>% group_by(incomeLevel) %>% summarise(averageAge = mean(age)),
file = "output.txt", sep = ";", append=TRUE, row.names=FALSE, col.names=FALSE)
write("Top 5 youngest people, whose application was declined: ",
file = "output.txt", append=TRUE)
dftmp <- filter(df, card == "no") %>% arrange(age)
write.table(dftmp[1:5,], file = "output.txt", sep = ";", append=TRUE)
write("Top 5 eldest people, whose application was declined: ", file = "output.txt", append=TRUE)
write.table(tail(dftmp, 5), file = "output.txt", sep = ";", append=TRUE)
write("Average number of major CCs held for people with top 10 income: ",
file = "output.txt", append=TRUE)
write((arrange(df, income) %>% tail(10))$majorcards %>% mean(),
file = "output.txt", append=TRUE)
close(output)
library("lubridate")
library("dplyr")
# 1.
# Create a dateframe of self-employed.
# Convert amount of months applicant living at his/her current address to days.
# Define criterion of income level, and split data according to levels of this criterion.
# Add column with income per family member.
# Due to the lack of information about a person's family,
# we assume that dependents are family members without the applicant.
today <- as.Date("2000-01-01")
df <- read.table("study_fall2021_intror_creditcard.txt", header=TRUE, sep=";") %>% filter(selfemp == "yes") %>%
mutate(days = as.numeric(today - (today %m-% months(df$months))), incomeLevel = case_when(
df$income < 2.5 ~ "low",
df$income <= 8 ~ "average",
df$income >8 ~ "high"
), incomePerFamilyMember = income / (dependents + 1))
# 2.
# Print some information about dataset.
file.create("output.txt", showWarnings = TRUE)
output <-file("output.txt")
write("Average amount of dependents for people don't own their home:", file="output.txt")
write((filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)))$meanDependents,
file="output.txt", append=TRUE)
write("Average age in each income groups:", file="output.txt", append=TRUE)
write.table(df %>% group_by(incomeLevel) %>% summarise(averageAge = mean(age)),
file = "output.txt", sep = ";", append=TRUE, row.names=FALSE, col.names=FALSE)
write("Top 5 youngest people, whose application was declined: ",
file = "output.txt", append=TRUE)
dftmp <- filter(df, card == "no") %>% arrange(age)
write.table(dftmp[1:5,], file = "output.txt", sep = ";", append=TRUE)
write("Top 5 eldest people, whose application was declined: ", file = "output.txt", append=TRUE)
write.table(tail(dftmp, 5), file = "output.txt", sep = ";", append=TRUE)
write("Average number of major CCs held for people with top 10 income: ",
file = "output.txt", append=TRUE)
write((arrange(df, income) %>% tail(10))$majorcards %>% mean(),
file = "output.txt", append=TRUE)
close(output)
library("lubridate")
library("dplyr")
# 1.
# Create a dateframe of self-employed.
# Convert amount of months applicant living at his/her current address to days.
# Define criterion of income level, and split data according to levels of this criterion.
# Add column with income per family member.
# Due to the lack of information about a person's family,
# we assume that dependents are family members without the applicant.
today <- as.Date("2000-01-01")
df <- read.table("study_fall2021_intror_creditcard.txt", header=TRUE, sep=";") %>% filter(selfemp == "yes") %>%
mutate(days = as.numeric(today - (today %m-% months(df$months))), incomeLevel = case_when(
df$income < 2.5 ~ "low",
df$income <= 8 ~ "average",
TRUE ~ "high"
), incomePerFamilyMember = income / (dependents + 1))
# 2.
# Print some information about dataset.
file.create("output.txt", showWarnings = TRUE)
output <-file("output.txt")
write("Average amount of dependents for people don't own their home:", file="output.txt")
write((filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)))$meanDependents,
file="output.txt", append=TRUE)
write("Average age in each income groups:", file="output.txt", append=TRUE)
write.table(df %>% group_by(incomeLevel) %>% summarise(averageAge = mean(age)),
file = "output.txt", sep = ";", append=TRUE, row.names=FALSE, col.names=FALSE)
write("Top 5 youngest people, whose application was declined: ",
file = "output.txt", append=TRUE)
dftmp <- filter(df, card == "no") %>% arrange(age)
write.table(dftmp[1:5,], file = "output.txt", sep = ";", append=TRUE)
write("Top 5 eldest people, whose application was declined: ", file = "output.txt", append=TRUE)
write.table(tail(dftmp, 5), file = "output.txt", sep = ";", append=TRUE)
write("Average number of major CCs held for people with top 10 income: ",
file = "output.txt", append=TRUE)
write((arrange(df, income) %>% tail(10))$majorcards %>% mean(),
file = "output.txt", append=TRUE)
close(output)
library("lubridate")
library("dplyr")
# 1.
# Create a dateframe of self-employed.
# Convert amount of months applicant living at his/her current address to days.
# Define criterion of income level, and split data according to levels of this criterion.
# Add column with income per family member.
# Due to the lack of information about a person's family,
# we assume that dependents are family members without the applicant.
today <- as.Date("2000-01-01")
df <- read.table("study_fall2021_intror_creditcard.txt", header=TRUE, sep=";") %>% filter(selfemp == "yes") %>%
mutate(days = as.numeric(today - (today %m-% months(df$months))), incomeLevel = case_when(
income < 2.5 ~ "low",
income <= 8 ~ "average",
TRUE ~ "high"
), incomePerFamilyMember = income / (dependents + 1))
# 2.
# Print some information about dataset.
file.create("output.txt", showWarnings = TRUE)
output <-file("output.txt")
write("Average amount of dependents for people don't own their home:", file="output.txt")
write((filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)))$meanDependents,
file="output.txt", append=TRUE)
write("Average age in each income groups:", file="output.txt", append=TRUE)
write.table(df %>% group_by(incomeLevel) %>% summarise(averageAge = mean(age)),
file = "output.txt", sep = ";", append=TRUE, row.names=FALSE, col.names=FALSE)
write("Top 5 youngest people, whose application was declined: ",
file = "output.txt", append=TRUE)
dftmp <- filter(df, card == "no") %>% arrange(age)
write.table(dftmp[1:5,], file = "output.txt", sep = ";", append=TRUE)
write("Top 5 eldest people, whose application was declined: ", file = "output.txt", append=TRUE)
write.table(tail(dftmp, 5), file = "output.txt", sep = ";", append=TRUE)
write("Average number of major CCs held for people with top 10 income: ",
file = "output.txt", append=TRUE)
write((arrange(df, income) %>% tail(10))$majorcards %>% mean(),
file = "output.txt", append=TRUE)
close(output)
# 1.
# Create a dateframe of self-employed.
# Convert amount of months applicant living at his/her current address to days.
# Define criterion of income level, and split data according to levels of this criterion.
# Add column with income per family member.
# Due to the lack of information about a person's family,
# we assume that dependents are family members without the applicant.
today <- as.Date("2000-01-01")
df <- read.table("study_fall2021_intror_creditcard.txt", header=TRUE, sep=";") %>% filter(selfemp == "yes") %>%
mutate(days = as.numeric(today - (today %m-% months(months))), incomeLevel = case_when(
income < 2.5 ~ "low",
income <= 8 ~ "average",
TRUE ~ "high"
), incomePerFamilyMember = income / (dependents + 1))
# 2.
# Print some information about dataset.
file.create("output.txt", showWarnings = TRUE)
output <-file("output.txt")
write("Average amount of dependents for people don't own their home:", file="output.txt")
write((filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)))$meanDependents,
file="output.txt", append=TRUE)
write("Average age in each income groups:", file="output.txt", append=TRUE)
write.table(df %>% group_by(incomeLevel) %>% summarise(averageAge = mean(age)),
file = "output.txt", sep = ";", append=TRUE, row.names=FALSE, col.names=FALSE)
write("Top 5 youngest people, whose application was declined: ",
file = "output.txt", append=TRUE)
dftmp <- filter(df, card == "no") %>% arrange(age)
write.table(dftmp[1:5,], file = "output.txt", sep = ";", append=TRUE)
write("Top 5 eldest people, whose application was declined: ", file = "output.txt", append=TRUE)
write.table(tail(dftmp, 5), file = "output.txt", sep = ";", append=TRUE)
write("Average number of major CCs held for people with top 10 income: ",
file = "output.txt", append=TRUE)
write((arrange(df, income) %>% tail(10))$majorcards %>% mean(),
file = "output.txt", append=TRUE)
close(output)
library("lubridate")
library("dplyr")
# 1.
# Create a dateframe of self-employed.
# Convert amount of months applicant living at his/her current address to days.
# Define criterion of income level, and split data according to levels of this criterion.
# Add column with income per family member.
# Due to the lack of information about a person's family,
# we assume that dependents are family members without the applicant.
today <- as.Date("2000-01-01")
df <- read.table("study_fall2021_intror_creditcard.txt", header=TRUE, sep=";") %>% filter(selfemp == "yes") %>%
mutate(days = as.numeric(today - (today %m-% months(months))), incomeLevel = case_when(
income < 2.5 ~ "low",
income <= 8 ~ "average",
TRUE ~ "high"
), incomePerFamilyMember = income / (dependents + 1))
# 2.
# Print some information about dataset.
file.create("output.txt", showWarnings = TRUE)
output <-file("output.txt")
write("Average amount of dependents for people don't own their home:", file="output.txt")
write((filter(df, owner == "no") %>% summarise(meanDependents = mean(dependents)))$meanDependents,
file="output.txt", append=TRUE)
write("Average age in each income groups:", file="output.txt", append=TRUE)
write.table(df %>% group_by(incomeLevel) %>% summarise(averageAge = mean(age)),
file = "output.txt", sep = ";", append=TRUE, row.names=FALSE, col.names=FALSE)
write("Top 5 youngest people, whose application was declined: ",
file = "output.txt", append=TRUE)
dftmp <- filter(df, card == "no") %>% arrange(age)
write.table(dftmp[1:5,], file = "output.txt", sep = ";", append=TRUE)
write("Top 5 eldest people, whose application was declined: ", file = "output.txt", append=TRUE)
write.table(tail(dftmp, 5), file = "output.txt", sep = ";", append=TRUE)
write("Average number of major CCs held for people with top 10 income: ",
file = "output.txt", append=TRUE)
write((arrange(df, income) %>% tail(10))$majorcards %>% mean(),
file = "output.txt", append=TRUE)
close(output)
